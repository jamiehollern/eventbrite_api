<?php

/**
 * @file
 * Provides the main module.
 */
 
/**
 * Implements hook_menu().
 */ 
function eventbrite_api_menu() {
  $items = array();
  // Eventbrite API admin config page.
  $items['admin/config/eventbrite'] = array(
    'title' => 'Eventbrite API configuration',
    'description' => 'Configure the Eventbrite API module.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('_eventbrite_api_admin'),
    'access arguments' => array('administer eventbrite_api config'),
    'type' => MENU_NORMAL_ITEM,
   );
  return $items;
}

/**
 * Implements hook_libraries_info().
 */
function eventbrite_api_libraries_info() {
  $libraries['eventbrite'] = array(
    'name' => 'eventbrite.php',
    'vendor url' => 'https://github.com/ryanjarvinen/eventbrite.php',
    'download url' => 'https://raw.github.com/ryanjarvinen/eventbrite.php/master/Eventbrite.php',
		// There isn't a version number anywhere to be found, so we have to hardcode this.
		'version' => 1,
    'files' => array(
      'php' => array(
        'eventbrite.php',
      ),
    ),
  );
  return $libraries;
}

/**
 * Admin configiguration form.
 */
function _eventbrite_api_admin() {
  $form = array();
	$form['config'] = array(
	  '#type' => 'fieldset',
		'#title' => t('Eventbrite authentication details'),
		'#collapsible' => TRUE,
		'#collapsed' => FALSE,
		'#description' => t('Get your API keys at <a href="@url">@url</a>.', array('@url' => 'https://www.eventbrite.com/api/key/')),
	);
  $form['config']['eventbrite_api_appkey'] = array(
    '#type' => 'textfield',
    '#title' => t('Eventbrite app key'),
    '#default_value' => variable_get('eventbrite_api_appkey', ''),
    '#required' => TRUE,
  );
  $form['config']['eventbrite_api_userkey'] = array(
    '#type' => 'textfield',
    '#title' => t('Eventbrite user key'),
    '#default_value' => variable_get('eventbrite_api_userkey', ''),
    '#required' => TRUE,
  );
	$form['#validate'][] = '_eventbrite_api_admin_validate';
  return system_settings_form($form);
}

/**
 * Validation function for the admin configiguration form.
 * Essentially, we're testing to see if the keys work.
 */
function _eventbrite_api_admin_validate($form, &$form_state) {
	// Load the library.
	$lib = libraries_load('eventbrite');
	// Get the app key and user key values from the form..
	$akey = $form_state['values']['eventbrite_api_appkey'];
	$ukey = $form_state['values']['eventbrite_api_userkey'];
	// Connect to Eventbrite.
  $eb_client = new Eventbrite(array('app_key' => $akey, 'user_key' => $ukey));
	// Try to get a list of events from Eventbrite with our credentials.
	try {
		// If it works, don't do anything as we want to save the details.
		$events = $eb_client->user_list_events();
	}
	// If it doesn't work, catch the error.
	catch (Exception $e) {
		// Variable for the form element.
		$element = 'config';
		// If it's the user key.
		if (strpos($error, 'user_key') !== FALSE) {
			$element = 'eventbrite_api_userkey';
		}
		// If it's the app key.
		elseif (strpos($error, 'application key') !== FALSE) {
			$element = 'eventbrite_api_appkey';
		}
		// Then stop the form from saving the details while printing the error.
		form_set_error($element, t('Connection to Eventbrite failed with the following error: @error', array('@error' => $e->getMessage())));
  }
}
